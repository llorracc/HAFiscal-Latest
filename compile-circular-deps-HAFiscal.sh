#!/bin/bash

# Auto-generated circular dependency compilation script
# Project: HAFiscal
# Generated by: LaTeX Dependency Manager
# 
# This script resolves circular cross-document dependencies that
# latexmk cannot handle automatically.

set -euo pipefail

echo "=== Circular Dependency Compilation for HAFiscal ==="
echo "Resolving 1 circular dependency pair(s)"
echo

# Function to compile with error handling
compile_document() {
    local doc="$1"
    local step="$2"
    local expect_undefined="${3:-false}"
    
    echo "Step $step: Compiling $doc"
    if [[ "$expect_undefined" == "true" ]]; then
        echo "  (undefined cross-references expected at this stage)"
    fi
    
    if latexmk -f "$doc" 2>&1; then
        echo "  ✅ $doc compiled successfully"
        return 0
    else
        local exit_code=$?
        if [[ $exit_code -eq 12 && "$expect_undefined" == "true" ]]; then
            echo "  ⚠️  $doc compiled with warnings (undefined references expected)"
            return 0
        else
            echo "  ❌ $doc compilation failed with exit code $exit_code"
            return $exit_code
        fi
    fi
}


# Circular dependency resolution: HAFiscal-online-appendix.tex ↔ HAFiscal.tex
echo "Resolving circular dependency: HAFiscal-online-appendix.tex ↔ HAFiscal.tex"
# Step 1: Generate initial .aux file for HAFiscal-online-appendix.tex
compile_document "HAFiscal-online-appendix.tex" "1" "true"

# Step 2: Generate .aux file for HAFiscal.tex (can now read HAFiscal-online-appendix.tex.aux)
compile_document "HAFiscal.tex" "2" "false"

# Step 3: Recompile HAFiscal-online-appendix.tex (can now read HAFiscal.tex.aux and resolve cross-references)
compile_document "HAFiscal-online-appendix.tex" "3" "false"


echo "✅ Circular cross-reference compilation complete!"
echo "All cross-document references should now be resolved"
