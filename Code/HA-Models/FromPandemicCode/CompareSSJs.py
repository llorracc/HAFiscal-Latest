"""
This script provides a tool for comparing MNW's version of the HA-SSJs for the
HAFiscal project to WDu's original version. Matt's results are generated by the
script HA-Fiscal-HANK-SAM-MATT.py, and Will's results are made by the script
HA-Fiscal-HANK-SAM.py (on which the other was based).
"""

import numpy as np
import matplotlib.pyplot as plt
import pickle

###############################################################################

S_set = [0, 10, 30, 60, 100]  # list of s indices to plot
shock_labels = ["transfers", "r", "w", "tau", "eta", "DiscFac", "UI_extend", "UI_rr"]  # used in pickled dictionary

obj = open('HA_Fiscal_Jacs.obj', 'rb')
WDu_JAC = pickle.load(obj)
obj.close()

obj = open('HA_Fiscal_Jacs_MNW.obj', 'rb')
MNW_JAC = pickle.load(obj)
obj.close()

CJAC_WDu = WDu_JAC['C']
AJAC_WDu = WDu_JAC['A']
CJAC_MNW = MNW_JAC['C']
AJAC_MNW = MNW_JAC['A']

###############################################################################

# Define a simple function for comparing SSJs
def plot_SSJ(jacs, S, outcome, shock, T_max=None):
    colors = ["b", "r", "g", "m", "c"]
    if type(S) is int:
        S = [S]
    i = 0
    if T_max is None:
        if type(jacs) is list:
            T = jacs[0].shape[0]
        else:
            T = jacs.shape[0]
    else:
        T = T_max
    for s in S:
        c = colors[i]
        if type(jacs) is list:
            plt.plot(jacs[0][:, s], "-" + c, label="s=" + str(s))
            plt.plot(jacs[1][:, s], "--" + c)
        else:
            plt.plot(jacs[:, s], "-" + c, label="s=" + str(s))
        i += 1
    plt.legend()
    plt.xlabel(r"time $t$")
    plt.ylabel("rate of change of " + outcome)
    plt.title("SSJ for " + outcome + " with respect to " + shock + r" at time $s$")
    plt.tight_layout()
    plt.xlim(-1, T + 1)
    plt.show()


# Make convenience functions to use only index number
def compare_CJACs(shock, T_max=None):
    plot_SSJ([CJAC_MNW[shock], CJAC_WDu[shock]], S_set, "consumption", shock, T_max)
    
def compare_AJACs(shock, T_max=None):
    plot_SSJ([AJAC_MNW[shock], AJAC_WDu[shock]], S_set, "assets", shock, T_max)
